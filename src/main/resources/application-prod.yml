server:
  servlet:
    encoding:
      charset: utf-8
      force: true
  port: 8080
spring:
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
  datasource:
    url: ${DATABASE_URL}?allowPublicKeyRetrieval=true&useSSL=false
    driver-class-name: org.mariadb.jdbc.Driver
    username: root
    password: root
  redis:
    host: redis-service
    port: 6379
    timeout: 3000
  jpa:
    hibernate:
      ddl-auto: update # (commented out) When set to 'create', the database schema is created every time the application starts.
    show-sql: true
    properties:
      hibernate:
        format_sql: true
      default_batch_fetch_size: 100
      open-in-view: false
  h2:
    console:
      enabled: true
  sql:
    init:
      data-locations: classpath:db/prodMockSetup.sql
      mode: always # always, never, embedded

#redis:
#  cache:
#    ttl:
#      viewCnt: 600000
#      popularPost: 3600000

schedules:
  popularPost:
    fixedDelay: 36000000
    initialDelay: 0
  fixedDelay: 600000
  initialDelay: 600000

common:
  frontend-server: ${FRONTEND_SERVER}

oauth2:
  kakao:
    client-id: ${KAKAO_CLIENT_ID}
    redirect-uri: ${FRONTEND_SERVER}/kakao/callback
    token-uri: ${KAKAO_TOKEN_URI}
    user-info-uri: ${KAKAO_USER_INFO_URI}

  instagram:
    client-id: ${INSTAGRAM_CLIENT_ID}
    client-secret: ${INSTAGRAM_CLIENT_SECRET}
    redirect-uri: ${FRONTEND_SERVER}/instagram/callback
    token-url: ${INSTAGRAM_TOKEN_URL}
    user-info-url: ${INSTAGRAM_USER_INFO_URL}

jwt:
  header: ${JWT_HEADER}
  secret: ${JWT_SECRET}
  token-validity-in-seconds-accessToken: ${JWT_ACCESS_TOKEN_VALIDITY_SECONDS}
  token-validity-in-seconds-refreshToken: ${JWT_REFRESH_TOKEN_VALIDITY_SECONDS}

spring.mvc.pathmatch.matching-strategy: ant_path_matcher

file:
  path: ${FILE_PATH}

url: ${URL}
